trigger:
- none # Or your primary branch

variables:
  dockerHubServiceConnection: 'SCDocker' 
  dockerHubUsername: 'maremilojkovic' 
  imageName: 'friznaklik' 
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: BuildAndPushToDockerHub
  displayName: 'Build and Push Docker Image to Docker Hub'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push Docker Image'
    pool:
      name: 'Default' # Ensure this is your correct agent pool
    steps:
    # --- START DEBUG STEP ---
    - script: |
        echo "Build.SourcesDirectory value is: $(Build.SourcesDirectory)"
        echo "Listing contents of Build.SourcesDirectory:"
        ls -la "$(Build.SourcesDirectory)" 
      displayName: 'Debug Print Build Context Path'
    # --- END DEBUG STEP ---

    - task: Docker@2
      displayName: 'Build image' 
      inputs:
        command: 'build' 
        containerRegistry: '$(dockerHubServiceConnection)' 
        repository: '$(dockerHubUsername)/$(imageName)' 
        dockerfile: '$(dockerfilePath)'
        tags: | # Tags to apply to the built image locally
          $(tag)
          latest
        buildContext: '$(Build.SourcesDirectory)' # This should be the path argument Docker needs
        # --- Re-added arguments on a single line ---
        arguments: '--build-arg DATABASE_URL=postgresql://${PG_USER}:${PG_PASSWORD}@db:5432/${PG_DB}?schema=public --build-arg NEXT_PUBLIC_SITE_URL=$(NEXT_PUBLIC_SITE_URL)'

    - task: Docker@2
      displayName: 'Push image to Docker Hub' 
      inputs:
        command: 'push' 
        containerRegistry: '$(dockerHubServiceConnection)' 
        repository: '$(dockerHubUsername)/$(imageName)' 
        tags: | # Specify which tags to push
          $(tag)
          latest
        # No need for dockerfile, buildContext, or arguments for push
- stage: DeployOnVM
  dependsOn: BuildAndPushToDockerHub
  condition: and(succeeded(), eq(variables['deploytoVM'], 'true'))
  jobs:
    - job: Trigger
      steps:
        - task: Bash@3
          env:
            AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
          inputs:
            targetType: 'inline'
            script: |
              curl -X POST \
                -H "Authorization: Bearer $AZURE_DEVOPS_EXT_PAT" \
                -H "Content-Type: application/json" \
                https://dev.azure.com/ZabariServer/FrizNaKlik/_apis/pipelines/3/runs?api-version=7.1-preview.1 \
                -d '{}'